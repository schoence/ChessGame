@using ChessGame.Common
@using ChessGame.Common
<style>
    .chess-board {
        border-spacing: 0;
        border-collapse: collapse;
    }

        .chess-board th {
            padding: .5em;
        }

            .chess-board th + th {
                border-bottom: 1px solid #000;
            }

            .chess-board th:first-child,
            .chess-board td:last-child {
                border-right: 1px solid #000;
            }

        .chess-board tr:last-child td {
            border-bottom: 1px solid;
        }

        .chess-board th:empty {
            border: none;
        }

        .chess-board td {
            width: 1.5em;
            height: 1.5em;
            text-align: center;
            font-size: 32px;
            line-height: 0;
            padding: 0;
        }

        .chess-board .light {
            background: #eee;
        }

        .chess-board .dark {
            background: #aaa;
        }

    .clicked {
        background: #87CEFA !important;
        opacity: 0.5;
        z-index: 9;
    }

    .stack-top {
        z-index: 9;
    }

    .chess-square {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .box {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        vertical-align: middle;
    }

    .piece {
        padding-top: 23px;
    }
</style>

<table class="chess-board">
    <tbody>
        @{
            for (int y = 0; y < _chessboard.GetLength(1); y++)
            {
                <tr>
                    <th>@y</th>
                    @for (int x = 0; x < _chessboard.GetLength(0); x++)
                    {
                        <SquareComponent
                            Square="@_chessboard[x,y]"
                            SetHighlighted="SetHighlighted"
                            RemoveHighlighted="RemoveHighlighted"
                            SetSelectedSquare="SetSelectedSquare"
                            MovePiece="MovePiece"
                            />
                    }

                </tr>
            }
        }
    </tbody>
</table>

@code {

    [Parameter] public Action<List<Coords>> SetHighlightedCallback { get; set; }
    [Parameter] public Action RemoveHighlightedCallback { get; set; }
    [Parameter] public Action<Coords> SetSelectedSquareCallback { get; set; }
    [Parameter] public Action<Coords> MovePieceCallback { get; set; }

    [Parameter] public Square[,] _chessboard { get; set; }

    public void SetHighlighted(List<Coords> coords) {
        Console.WriteLine("Second One");
        SetHighlightedCallback?.Invoke(coords);
    }

    public void RemoveHighlighted() {

        RemoveHighlightedCallback.Invoke();
    }

    public void SetSelectedSquare(Coords coord) {
        SetSelectedSquareCallback.Invoke(coord);
    }
    public void MovePiece(Coords coord)
    {
        Console.WriteLine("MovePiece from ChessBoardComponent.razor");
        MovePieceCallback.Invoke(coord);
    }
}
